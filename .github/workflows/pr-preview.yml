name: Deploy PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Build Jekyll site
        run: |
          bundle install
          bundle exec jekyll build --baseurl "/pr-preview/${{ github.event.pull_request.number }}"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
          destination_dir: pr-preview/${{ github.event.pull_request.number }}
          keep_files: true

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const repoName = context.repo.repo;
            const ownerName = context.repo.owner;
            const previewUrl = `https://${ownerName}.github.io/${repoName}/pr-preview/${prNumber}/`;
            
            const comment = `🚀 **プレビュー環境が作成されました！**
            
            プレビューURL: ${previewUrl}
            
            このプレビューは、PRが更新されるたびに自動的に更新されます。`;
            
            // 既存のコメントを検索
            const comments = await github.rest.issues.listComments({
              owner: ownerName,
              repo: repoName,
              issue_number: prNumber
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('プレビュー環境が作成されました')
            );
            
            if (botComment) {
              // 既存のコメントを更新
              await github.rest.issues.updateComment({
                owner: ownerName,
                repo: repoName,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // 新規コメントを作成
              await github.rest.issues.createComment({
                owner: ownerName,
                repo: repoName,
                issue_number: prNumber,
                body: comment
              });
            }

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Remove preview directory
        run: |
          rm -rf pr-preview/${{ github.event.pull_request.number }}
          
      - name: Commit and push cleanup
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add .
          git diff --quiet && git diff --staged --quiet || (git commit -m "Remove preview for PR #${{ github.event.pull_request.number }}" && git push)